// SPDX-License-Identifier: GPL-3.0
// Generated using circom - https://github.com/iden3/circom
pragma solidity ^0.8.0;

import "./Pairing.sol";

contract OpenAnswerVerifier {
    using Pairing for *;

    struct VerifyingKey {
        Pairing.G1Point alfa1;
        Pairing.G2Point beta2;
        Pairing.G2Point gamma2;
        Pairing.G2Point delta2;
        Pairing.G1Point[] IC;
    }

    struct Proof {
        Pairing.G1Point A;
        Pairing.G2Point B;
        Pairing.G1Point C;
    }

    uint256 default_hash = 15083001670805533818279519394606955016606512029788045584851323712461001330117;  // = Poseidon(keccak256(""))
    
    // Contains the result of the necessary additions for the default hash. Is used with tests that don't implement the
    // full 50 questions to save gas
    mapping(uint8 => Pairing.G1Point) private emptyAnswersSum;

    constructor () {
        emptyAnswersSum[0] = Pairing.G1Point(
                11945070954606482126644786393216930370232725846899710904400502846012524795691,
                17266657172115096626815242743379549459977651121368940084035987106465112733344
        );
        emptyAnswersSum[1] = Pairing.G1Point(
            4900825660418497643454740538032171320381224572493569373682672351167945189310,
            20148817340416994586681429512739357601122995149043224816651778943328339870448
        );
        emptyAnswersSum[2] = Pairing.G1Point(
            9190236355585601851545719789466313071487089757277136006072111193761973905687,
            20121048250126974603910642892046432137949219266645945025948421269730859410298
        );
        emptyAnswersSum[3] = Pairing.G1Point(
            5782196166616080774132556217728419431125855827634994243665430790840702840413,
            14403256002989337221117617293164737438955670610188082009450609560343552854021
        );
        emptyAnswersSum[4] = Pairing.G1Point(
            12752856003392206395586653993145748040604385337561761438682400101434730692502,
            21676830446249049536842466842624264231235546437847448996164284999981482766640
        );
        emptyAnswersSum[5] = Pairing.G1Point(
            18072281685882897563793324605669282539331178077055640363972814052872952738802,
            14178819629702448212526036770221006223366810980238013778765753259710998760672
        );
        emptyAnswersSum[6] = Pairing.G1Point(
            1654962963845288084281784320784699907655440127407205213323942806428611400523,
            2636106869605133907801180597539827420231149759456614378290374023382130353766
        );
        emptyAnswersSum[7] = Pairing.G1Point(
            1606651559599727085528086978660727457754348054128279067446037488238185893890,
            20232267144850387224475134830438259339266577119746681328498036845094037213444
        );
        emptyAnswersSum[8] = Pairing.G1Point(
            7711549588813169808537761063299165921366137776926571144180250683985510298971,
            13226798884557845433736799000010621320341446738223012106258497700562232308799
        );
        emptyAnswersSum[9] = Pairing.G1Point(
            9943077783377869948129247530650112890674107913837451945435371208195729279712,
            4361216880760551925347452645921061255291552137927079737406860630620410042970
        );
        emptyAnswersSum[10] = Pairing.G1Point(
            7940226497722018713603479152532195919334142077160092269214436847709600622816,
            8061536953934724849041469589334246700288303081619679541862523577548390057661
        );
        emptyAnswersSum[11] = Pairing.G1Point(
            13030490040212733800089653371569076531105978105795883917958799373589387282991,
            11762572060579122884727299816734629144979098981815631179622830072348384180093
        );
        emptyAnswersSum[12] = Pairing.G1Point(
            4051335768832307323610692944267741826835815508641648461098831959002180591403,
            6444685498648505586649057001261237538570042752967986881719951382054001005858
        );
        emptyAnswersSum[13] = Pairing.G1Point(
            14225693568457176088703681123015802883850135950030792094713110660670605785000,
            2781993883993618095997312736056440941014849274874198586904711367094353032269
        );
        emptyAnswersSum[14] = Pairing.G1Point(
            20825098928412938489310272305249405125765144811462433541710955308847190303223,
            11843124564331660617194642542894621429742261429414873792240089065463542018997
        );
        emptyAnswersSum[15] = Pairing.G1Point(
            8184330260104933201337679353297915060273051053901479516465145736543851581729,
            18518386925862669412331805339202287259470606195097263307272455328866296997589
        );
        emptyAnswersSum[16] = Pairing.G1Point(
            21365301013084871410892299279689240718885301589847215421961543744154691824469,
            11224552013833234414752332418306062697036545023599887999082718400741014864391
        );
        emptyAnswersSum[17] = Pairing.G1Point(
            5962987235595939720088899242490824122355678854885496739417203729169407832489,
            3414434438480613634639059532407565429422061410690039120328145848453087576516
        );
        emptyAnswersSum[18] = Pairing.G1Point(
            20207428291813611974750217226352278381704780596898867850928624933296615566091,
            12187186580338998451600333044231103341077085077712007039703977812671606095223
        );
        emptyAnswersSum[19] = Pairing.G1Point(
            3160929226406618582079292327578683793000960442974737351199848880842069653081,
            18310201418972551564294661720064432443838365646073146086192765585358562625020
        );
        emptyAnswersSum[20] = Pairing.G1Point(
            13811616770625121797908595834091819129262964793024871345730810688724015211544,
            20501150226936288384738506385713158823333872321232889027339149690976052752914
        );
        emptyAnswersSum[21] = Pairing.G1Point(
            2922211156829241978751264299817745216132592657602557800268259653108071800566,
            11528832717508805799126301435140612625746698587168176294822168017739004091370
        );
        emptyAnswersSum[22] = Pairing.G1Point(
            14433068275161241140830076736390647435105395165099559860676814164818594412208,
            14078445934730471850823292403683821716929869798188091330866076746714852381713
        );
        emptyAnswersSum[23] = Pairing.G1Point(
            9007925986667284722101659820992825347573531502668327861624899586865894935393,
            7995297958156485694886635569241157348831893840944970577449123201326061079798
        );
        emptyAnswersSum[24] = Pairing.G1Point(
            8437454744664486157739772786861403027669087096876690266610770106364824260098,
            14200601040334208445360796354315752643763684959987108539455983629461633766469
        );
        emptyAnswersSum[25] = Pairing.G1Point(
            1798760236540483504195267232259685072479440159429329638650705111509601400846,
            4406772213694056013574813842879211312620927807254998871892104812427987463244
        );
        emptyAnswersSum[26] = Pairing.G1Point(
            3318166468745592200044166033674615161337124308894689038540762057618972437468,
            1884460399305263425753094121160608242220803630165042966504379669856489562096
        );
        emptyAnswersSum[27] = Pairing.G1Point(
            10498147393613668410120582413378334107706944817491972529166446919995479780498,
            15788081275979977821826760504022421291484793962705590639968466567401505066724
        );
        emptyAnswersSum[28] = Pairing.G1Point(
            1569247639188879519237432741155972782474021247442634165188492703448448928150,
            11765767076318714457139482036800015273838461574374312309777797209291363235907
        );
        emptyAnswersSum[29] = Pairing.G1Point(
            17227709901965863693632948837602733227964161082163274508536605924218269665284,
            21537761446970486398605687240123792364987395615020199189923155427967701117045
        );
        emptyAnswersSum[30] = Pairing.G1Point(
            5440308867934799457065360921146949255359596786583356736570079114279945116665,
            12567247202476137188090330219473680664307970944155869404257815043848757686014
        );
        emptyAnswersSum[31] = Pairing.G1Point(
            1010528066530125947115005482442230020255848204012563254698668116260851579952,
            18148262156963468611258638943770306215273347672462621006046852286966052771274
        );
        emptyAnswersSum[32] = Pairing.G1Point(
            7415628769264199206772526302932397482326958398787047210854591660690401871894,
            16012392519874652274596009867379630785720698317361643391495901986904346713329
        );
        emptyAnswersSum[33] = Pairing.G1Point(
            9398166351129971028932165500547625027629939284382837047205767881502679297306,
            3709757924175102468700525010326975307624463542041024136280844099455573932328
        );
        emptyAnswersSum[34] = Pairing.G1Point(
            12756055801885251346151367406115173316932768975832956823279659642882170664568,
            8795078032859828963777005151539539428834000943867299328444647423274390180569
        );
        emptyAnswersSum[35] = Pairing.G1Point(
            17538643922651948099606245738472904879241381172995239575496851215601004610685,
            11406717813899859931453870758138203272856532101094830002379658077375378698477
        );
        emptyAnswersSum[36] = Pairing.G1Point(
            17108886605059153792818210723604635197940686381515826886235739828234974251262,
            2330081470154369751846199883836924681235942120450821587408490250072974863962
        );
        emptyAnswersSum[37] = Pairing.G1Point(
            20560267447646164442010225743172351373070923367096851345189128598085473081163,
            9401805292088466067878619552925874896303035111179194538493564580813729497174
        );
        emptyAnswersSum[38] = Pairing.G1Point(
            9338380786206213954045078454854775442755592805291504802855810255772644307317,
            1613441942358527845742452202176111842391334046261279436790220236129910394105
        );
        emptyAnswersSum[39] = Pairing.G1Point(
            17289562603106268943617649303500903115745345120940520424446642992114796937941,
            20881172657406685216346657700860528843710301927294534977420300172132078997967
        );
        emptyAnswersSum[40] = Pairing.G1Point(
            4217774884438623715680518315116226079226804263466597829573946446860249544242,
            1119609055429118487986148701160053999832465840714868611062875269891221873267
        );
        emptyAnswersSum[41] = Pairing.G1Point(
            16218811621928596486830069772213938791176901593849286291286484369815688320577,
            17507946456687009652616246953398646837243455566447304247443514649268791077346
        );
        emptyAnswersSum[42] = Pairing.G1Point(
            13805700022931247045858298923602569720268669813837466474119158764277167520188,
            6619807010685018673078387240797217602044505926747274467461046215562980057190
        );
        emptyAnswersSum[43] = Pairing.G1Point(
            9948193530959869033166768989525298058969747207703200572400975781739834676506,
            21797644181193926034812571855059253562055934765681157587236966633089583393821
        );
        emptyAnswersSum[44] = Pairing.G1Point(
            20299387125836753926858019418902528984086855722010646385493564428395557933838,
            776139051795047595061449721643908797332617749734917773362157496163256420281
        );
        emptyAnswersSum[45] = Pairing.G1Point(
            17749326373203263541058791122862066978937844933258309409710388177667917093596,
            18199031683467582287535324344796502000817020130536210708989098988034484468218
        );
        emptyAnswersSum[46] = Pairing.G1Point(
            6481195585153972331076812052445354404313415045487442850535540706209200983935,
            8706990099399261252512792849070172594355902269537324320934101297078560639631
        );
        emptyAnswersSum[47] = Pairing.G1Point(
            17652549289041624948580621316125267964222932525405695531317590261826552188690,
            13108772501335828096729218750993763870558291902776055986219909359792781203929
        );
    }
    // TODO: do calculations PRIOR, simply send data to smart contract - saves on deployment gas
    // TODO: tests MUST have at least one question - verify upon creating and wherever else

    function verifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Pairing.G1Point(
            20491192805390485299153009773594534940189261866228447918068658471970481763042,
            9383485363053290200918347156157836566562967994039712273449902621266178545958
        );

        vk.beta2 = Pairing.G2Point(
            [4252822878758300859123897981450591353533073413197771768651442665752259397132,
             6375614351688725206403948262868962793625744043794305715222011528459656738731],
            [21847035105528745403288232691147584728191162732299865338377159692350059136679,
             10505242626370262277552901082094356697409835680220590971873171140371331206856]
        );
        vk.gamma2 = Pairing.G2Point(
            [11559732032986387107991004021392285783925812861821192530917403151452391805634,
             10857046999023057135944570762232829481370756359578518086990519993285655852781],
            [4082367875863433681332203403145435568316851327593401208105741076214120093531,
             8495653923123431417604973247489272438418190587263600148770280649306958101930]
        );
        vk.delta2 = Pairing.G2Point(
            [1486569076915119473867399018195216817271978814273513296899114506727666207755,
             18983861466567016674592815478122627032666465512408493867077864475931133379663],
            [2898901203375226252505636154407458906258421979342514633192459341076144278603,
             5341036346386301455874744522316229146964416556770042149674242907674119601507]
        );
        vk.IC = new Pairing.G1Point[](53);
        
        vk.IC[0] = Pairing.G1Point( 
            17184534921340409181114449646534424398685580925816367734163462037943592138176,
            10167885351173690457370686122774854687261466809170531824019171651391861238878
        );                                      
        
        vk.IC[1] = Pairing.G1Point( 
            4440649950238292807986300145825162293681852494093872718747388127086156231675,
            14106865015667717914112480370990451246437570148846904716958156130499627844777
        );                                      
        
        vk.IC[2] = Pairing.G1Point( 
            6213535823230384802461253114610857575841819960983537908341038978642292459090,
            18556738813095041583226610857293739677764386986888193334312996384132618175388
        );                                      
        
        vk.IC[3] = Pairing.G1Point( 
            13712052988298587215916783341339112589908593272090531275684584558997776907289,
            1959903134413184913697606543325656504294661615220855591523842179173442135279
        );                                      
        
        vk.IC[4] = Pairing.G1Point( 
            3533174363403103365469472618419761479932149237721172604288700560096260782869,
            1553330041243459735815310924389021026598474941678466324485256217765247876205
        );                                      
        
        vk.IC[5] = Pairing.G1Point( 
            9278691556984401748219111324066505209660523358415804669866115379119863010236,
            4151211517587083772047361417371960026911205889672262556440099877685935270614
        );                                      
        
        vk.IC[6] = Pairing.G1Point( 
            301436993648971109799533321877120601901816290870333280634205458155812248207,
            16192308855549625840819255751908139819937057828268773385037499400678656868022
        );                                      
        
        vk.IC[7] = Pairing.G1Point( 
            9897242820456196931414052740863889137701459670740922852935930794612423503294,
            21748297670925274328931003368619891022286405048588219863406622146767331790510
        );                                      
        
        vk.IC[8] = Pairing.G1Point( 
            7374246540923196234659075227156385710789871506643292622313199412950393740908,
            11743170339883177601165488842406817648092282485043982206813902145997952832556
        );                                      
        
        vk.IC[9] = Pairing.G1Point( 
            4816007953405982233984989510542795556439230931848889701102565934522838296759,
            9739263504724692154455614100323068242189305179515506421383491153870172827868
        );                                      
        
        vk.IC[10] = Pairing.G1Point( 
            1169379666837431215985145930524181882048345620143849655114360737195395123712,
            1792581031148846857239033860924994671760568156098886203919379178566193346714
        );                                      
        
        vk.IC[11] = Pairing.G1Point( 
            12438906611317891023646723115544051755315467817290871177323228484169630307122,
            13363434247072283020089477935054243358285507692686866075028093895687040198612
        );                                      
        
        vk.IC[12] = Pairing.G1Point( 
            4821153645768242029646151486137762360471092770081796945666839899250815706101,
            6612175943949397056707404910664606019444930054940126295116776940225144221613
        );                                      
        
        vk.IC[13] = Pairing.G1Point( 
            17603781136413509611842978607157726835594100301830135864106593972669606608494,
            4043878243913271291640288707823452424511356024820790498041078140135241156046
        );                                      
        
        vk.IC[14] = Pairing.G1Point( 
            19186407243795822923748150130556740680937910480991952540883851050412692602727,
            3371069188752396418051011845674653375526729954352312326685466299048454557305
        );                                      
        
        vk.IC[15] = Pairing.G1Point( 
            16060864964859866494920885288750956263424932904777426001149082836063137457351,
            12577018238384499719522728587576220752007240081886495264590576798524738573929
        );                                      
        
        vk.IC[16] = Pairing.G1Point( 
            13691784628922009672837810992318839073602279026773169386382943851625658665008,
            5190589143527346135682758059552373922820694324695243435361017756435388453694
        );                                      
        
        vk.IC[17] = Pairing.G1Point( 
            18873765492911113290988216659765090033743631339836788743192535133991930421127,
            17945406734822662266866137007144190072776455852280101570019589657499546649270
        );                                      
        
        vk.IC[18] = Pairing.G1Point( 
            12878964943863853705049283979170835106343747331936261635223647856004467662477,
            3178440394004169252360747262170645833074937029925334814786307837085514827465
        );                                      
        
        vk.IC[19] = Pairing.G1Point( 
            14818509606185176740590323235821915872691620942763985906233278078364456275878,
            21375515133883596625835097565297719294974079318670540175266069114483791281602
        );                                      
        
        vk.IC[20] = Pairing.G1Point( 
            19644317893684323072006292596706416099334300466813072599634238629006687986355,
            17587166487691878635156514635166984019203525946846542616572644735062348701046
        );                                      
        
        vk.IC[21] = Pairing.G1Point( 
            13040959695463024647678227697603572309418496399233160701523721282604558696344,
            4063467494676424798855350102144040545975294287947329318183566874464082814337
        );                                      
        
        vk.IC[22] = Pairing.G1Point( 
            3083327576019679437439883830726351601877045899088602550137948535033737886315,
            2614715572949940542730126023796035957319910299424532410954313948833328212548
        );                                      
        
        vk.IC[23] = Pairing.G1Point( 
            1770264637936522564282383496306839538461625755891750224639021800040887725752,
            10556284359621890591403940565907349713955263103295632882627589172937358261810
        );                                      
        
        vk.IC[24] = Pairing.G1Point( 
            6469960083863971116567437713656755583310841628101256428753088669270467941507,
            4483545461090216922031594723989051573847996153006607900468352178865220197734
        );                                      
        
        vk.IC[25] = Pairing.G1Point( 
            20486160143001195708931718663825001479327649835811477203296837533652804793439,
            19209385091293533462934657237417997652015901350874924566038910511347846914468
        );                                      
        
        vk.IC[26] = Pairing.G1Point( 
            15024510282688627701881405883941491840010498949931250081583692736639442845316,
            2783639443572922457587598470516406962964660864093496992150319218786291521430
        );                                      
        
        vk.IC[27] = Pairing.G1Point( 
            2265769611123672626329098567154060682377754131802189689029272981065960311933,
            7910311115976322888141987554453156735756619153659745878063150279545953784947
        );                                      
        
        vk.IC[28] = Pairing.G1Point( 
            5712139390982839411026006061003811342368723821880997407428464081828738905511,
            1486093255542197932515400993229877756625191658460117088630017697008531798074
        );                                      
        
        vk.IC[29] = Pairing.G1Point( 
            2816295949643389165731135304410920463429535900026561614292083001674530450001,
            3929014073453990048964392064768697247357340991904986537977034908106932795265
        );                                      
        
        vk.IC[30] = Pairing.G1Point( 
            13884228219546326065799624771179846223511441408703332513350267697104163706180,
            1670298105361234267403852451736258715940975834999379394384959637366486391706
        );                                      
        
        vk.IC[31] = Pairing.G1Point( 
            9931998187755558095273697358483393553484694080269362244333293362859365572526,
            1507089334314541249839674884931313440468827761340923316492307229475002031844
        );                                      
        
        vk.IC[32] = Pairing.G1Point( 
            2902400159630709470415190619229423494257033685710334217621970101759269306577,
            901174927798421465081321042106676787644719027216917912902848316888965766831
        );                                      
        
        vk.IC[33] = Pairing.G1Point( 
            10755787377471626638286074099607295584060598921866615127428743041252604219505,
            1863986916529588281262080211524518360415162204279418980561909144675893615623
        );                                      
        
        vk.IC[34] = Pairing.G1Point( 
            824482469778275648358672543689284536976138725308647501528819137245885198566,
            13108604500804266191712024009869470441033760946776322422057706828339149961762
        );                                      
        
        vk.IC[35] = Pairing.G1Point( 
            18688938519754613474752451318314559917711054206501615458395765786548924475251,
            5567161432570485716776339978918987207398214398550948730006138580754271263225
        );                                      
        
        vk.IC[36] = Pairing.G1Point( 
            3584343339444731087454452985630235918726686615763793610720544251957828819799,
            5563718686416845463587139780250952847123638239872847248185678344908366934357
        );                                      
        
        vk.IC[37] = Pairing.G1Point( 
            4535475011744387146311750553498744269006642670939168098911477627668225019150,
            21237593805033187837432801414882776417675025239930057117407248190969664966112
        );                                      
        
        vk.IC[38] = Pairing.G1Point( 
            12277025073715527610975556881648203787937224582236526445523919905124760793007,
            11749516139972178765003873754280356563133410326374011932922735614261988569415
        );                                      
        
        vk.IC[39] = Pairing.G1Point( 
            20040274610001364391559383439349894203555404198465124390927537642809949845062,
            20205984640316710745590971379492661692978909998055854329455711483421698369281
        );                                      
        
        vk.IC[40] = Pairing.G1Point( 
            8249048031964776923369464984839365709073007262818160443859384648768097487296,
            1861212254776820776802089041556819908506779675274148653525833047556298030977
        );                                      
        
        vk.IC[41] = Pairing.G1Point( 
            8800403682225387391314287024395164130807837184275252521810286806321157448144,
            16228734990743755200550444354364025090350504144132925414984901378318614262707
        );                                      
        
        vk.IC[42] = Pairing.G1Point( 
            17694501635855774874577067773375912429264546428730864004395389936068690354444,
            1524978985742191599484167425473479098584789212309755786470765799225661477853
        );                                      
        
        vk.IC[43] = Pairing.G1Point( 
            16724929499128491996057262040297806386863607631270743487809616916149960084687,
            2693525032336215221504827400696190719702573594001780866564973430688332517126
        );                                      
        
        vk.IC[44] = Pairing.G1Point( 
            10141113707709072769525705752983466560352005955167936535430764227673686656280,
            5492941939939671560810832597057418270137296438020674476249577535827345188074
        );                                      
        
        vk.IC[45] = Pairing.G1Point( 
            6753163586395172863686268387327175762251132321432856752422533208564720281432,
            18835184817207277131575855549262634769854251200465159826181706067440841301109
        );                                      
        
        vk.IC[46] = Pairing.G1Point( 
            17042378945361482626369719275258158973432109883153901215813464004599267052579,
            19945935711655791783724495161888387081408499501688597724350957628969142355788
        );                                      
        
        vk.IC[47] = Pairing.G1Point( 
            14513266388513044901531551742900785130053943344996105594902864633212576997889,
            7811734196428461866914289089511544061841910829924310732329377584209789024527
        );                                      
        
        vk.IC[48] = Pairing.G1Point( 
            8880297922931401141885498921838772971849959055911850709239537559930537500357,
            16109280331501759089462580801316254558644905630519661733423341488678895978984
        );                                      
        
        vk.IC[49] = Pairing.G1Point( 
            17836813010919825230257108049609975785349553430560261903258108725395136578618,
            16018265793854332034546161088141652010554776951490440847338188236985108868344
        );                                      
        
        vk.IC[50] = Pairing.G1Point( 
            15128735186557710614655134492677837939734175709696656499157014027443554067328,
            19412592099529774737925446124344885347778500485085965044604584312408342990515
        );                                      
        
        vk.IC[51] = Pairing.G1Point( 
            13259884505545473243576444863387775579733165316191798480129911368636198410595,
            16406551298882305905354330257028057481260671097632944898525837762063957720859
        );
        
        vk.IC[52] = Pairing.G1Point( 
            4928537417727684234693943307170515317519172766319755793662121602533402416917,
            448615011629093935114927933103471248511457066544084990506306201193030999433
        );
        
    }
    
    function verify(
        uint result,
        uint[] memory input, 
        uint salt,
        Proof memory proof
    ) internal view returns (uint) {
        uint256 snark_scalar_field = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
        VerifyingKey memory vk = verifyingKey();
        require(input.length <= 50, "verifier-bad-input");
        // Compute the linear combination vk_x
        // TODO: is this gas saving? loading vk.IC[0] instead of initializing empty point
        Pairing.G1Point memory vk_x = vk.IC[0];

        require(result < snark_scalar_field,"verifier-gte-snark-scalar-field");
        vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(vk.IC[1], result));
        for (uint i = 0; i < input.length; i++) {
            require(input[i] < snark_scalar_field,"verifier-gte-snark-scalar-field");
            vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(vk.IC[i + 2], input[i]));
        }
        if (input.length < 50) {
            vk_x = Pairing.addition(vk_x, emptyAnswersSum[uint8(50 - input.length - 1)]);
        }
        require(salt < snark_scalar_field,"verifier-gte-snark-scalar-field");
        vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(vk.IC[52], salt));

        if (!Pairing.pairingProd4(
            Pairing.negate(proof.A), proof.B,
            vk.alfa1, vk.beta2,
            vk_x, vk.gamma2,
            proof.C, vk.delta2
        )) return 1;
        return 0;
    }

    /// @return r  bool true if proof is valid
    function verifyProof(
            uint[2] calldata a,
            uint[2][2] calldata b,
            uint[2] calldata c,
            uint result, 
            uint salt,
            uint[] memory input
        ) public view returns (bool r) {
        Proof memory proof;
        proof.A = Pairing.G1Point(a[0], a[1]);
        proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);
        proof.C = Pairing.G1Point(c[0], c[1]);
        uint[] memory inputValues = new uint[](input.length);
        for(uint i = 0; i < input.length; i++){
            inputValues[i] = input[i];
        }
        if (verify(result, input, salt, proof) == 0) {
            return true;
        } else {
            return false;
        }
    }
}
