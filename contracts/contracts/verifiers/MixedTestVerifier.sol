// SPDX-License-Identifier: GPL-3.0
// Generated using circom - https://github.com/iden3/circom
pragma solidity ^0.8.0;

import "./Pairing.sol";

contract MixedTestVerifier {
    using Pairing for *;
    struct VerifyingKey {
        Pairing.G1Point alfa1;
        Pairing.G2Point beta2;
        Pairing.G2Point gamma2;
        Pairing.G2Point delta2;
        Pairing.G1Point[] IC;
    }
    struct Proof {
        Pairing.G1Point A;
        Pairing.G2Point B;
        Pairing.G1Point C;
    }
    function verifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Pairing.G1Point(
            20491192805390485299153009773594534940189261866228447918068658471970481763042,
            9383485363053290200918347156157836566562967994039712273449902621266178545958
        );

        vk.beta2 = Pairing.G2Point(
            [4252822878758300859123897981450591353533073413197771768651442665752259397132,
             6375614351688725206403948262868962793625744043794305715222011528459656738731],
            [21847035105528745403288232691147584728191162732299865338377159692350059136679,
             10505242626370262277552901082094356697409835680220590971873171140371331206856]
        );
        vk.gamma2 = Pairing.G2Point(
            [11559732032986387107991004021392285783925812861821192530917403151452391805634,
             10857046999023057135944570762232829481370756359578518086990519993285655852781],
            [4082367875863433681332203403145435568316851327593401208105741076214120093531,
             8495653923123431417604973247489272438418190587263600148770280649306958101930]
        );
        vk.delta2 = Pairing.G2Point(
            [5217882105794550154408423037280545591862827013371902011156502284263450630673,
             2799774028839956008688600097169738666403011240628531893741643516638884542659],
            [3131319720296049048439536421305396424529518112198393854591430279124496332535,
             16874848302598912533275142776224196148216998038472262286768699069638929107210]
        );
        vk.IC = new Pairing.G1Point[](54);
        
        vk.IC[0] = Pairing.G1Point( 
            10428215904243059910161435476444244107790998944507389738763055355088472755870,
            10247089893835375414691922193178255679482816867883136553502858142164948105734
        );                                      
        
        vk.IC[1] = Pairing.G1Point( 
            14853270908048955827047785825279703738755202526531674010849077110519957898280,
            21747313468637733129270259438512018236948280345777941289732386020968188886340
        );                                      
        
        vk.IC[2] = Pairing.G1Point( 
            2005050669931591904392064395510830426840036541259085597430080634344196929588,
            5436092943482796520839888935075719780969559671701286257006307867771760530512
        );                                      
        
        vk.IC[3] = Pairing.G1Point( 
            3159923533621231434250561653144239704904295448127186935525919551609027583697,
            553140790493365963410300338870081497807551282981971615715516670865390526580
        );                                      
        
        vk.IC[4] = Pairing.G1Point( 
            2816834128504404140909267467476882726909685191829621310739772818138049324493,
            13720412240958100548741024833373185264437075105450430497653520489237210933099
        );                                      
        
        vk.IC[5] = Pairing.G1Point( 
            2876613685733772282428020126514438020216357344954951749161488774667553523329,
            6549245392076080040350649773221258918385792088484005629698713600738733246976
        );                                      
        
        vk.IC[6] = Pairing.G1Point( 
            19905105621512369558246171264301847803352413704461302700539912137349492356697,
            21581488234635837043195685549299285669959940856306510560486211613376565630736
        );                                      
        
        vk.IC[7] = Pairing.G1Point( 
            18641233469943986780556185996635339577056006256229109342826913403635947557188,
            12072626982561220528658996045164397074206265958447538540072271509395522484026
        );                                      
        
        vk.IC[8] = Pairing.G1Point( 
            8993430124558029195671963045617425164073575901553422571041704468783283120957,
            11695525816680567677438161818318416922102397715943718874806419090885289430242
        );                                      
        
        vk.IC[9] = Pairing.G1Point( 
            12839929268967749256047243723656514123540726213892503790272353175547316851272,
            10802251764999445564405502321069524749570119712303928753627408057684990242935
        );                                      
        
        vk.IC[10] = Pairing.G1Point( 
            15698249883240967842552830378033737003593062225303143615178057075963186504080,
            16655636172225493028723554117099864998309276602721360638437262237616456129355
        );                                      
        
        vk.IC[11] = Pairing.G1Point( 
            9793348673154845481688737380918158935086634055282786856337143579092176466360,
            8272323912464204929136883117090610947226699665000836673080742399336291405393
        );                                      
        
        vk.IC[12] = Pairing.G1Point( 
            20270065954632525928999175047929481879444391018786771020210359360655013309660,
            4171036445068731807640155841037774123242458071390260772138369404696136724821
        );                                      
        
        vk.IC[13] = Pairing.G1Point( 
            17773897839381628327202789102402320414789825924317838500693236223088454030013,
            6719086339408953928635656397896428442701443596883895113757151699546789049229
        );                                      
        
        vk.IC[14] = Pairing.G1Point( 
            18761190871177422233744956300790005397115367747962053668574045824287482703740,
            15864270615659763775575883530737341470278963173047296177217560183049086521784
        );                                      
        
        vk.IC[15] = Pairing.G1Point( 
            13312229223742180364796369102810777501883926060748619425412686425550282986686,
            17908719232289178441780095228608136438555081201392164481243889677815928470733
        );                                      
        
        vk.IC[16] = Pairing.G1Point( 
            15856914208845515082736225638318148672324460452147304129411269440959757622891,
            9628858939781149345069643295719717952748790000154979849842600280755981924284
        );                                      
        
        vk.IC[17] = Pairing.G1Point( 
            4972661982691893021979623093543455153700014573123769983607607326268350180712,
            6810770174950708366977512909023536102213621572434423911217154794958885969371
        );                                      
        
        vk.IC[18] = Pairing.G1Point( 
            16018896024515942302590972828325253627146941090857729800252308526620854220887,
            6651635479993863136439730170761634109794654804036799350287875815754552322521
        );                                      
        
        vk.IC[19] = Pairing.G1Point( 
            11863812841917890788226488310938300312090151074595927371580472099130851300221,
            13246977618278068247607653901638005443590643955342528611321260648085531485739
        );                                      
        
        vk.IC[20] = Pairing.G1Point( 
            14776497397885984007402775435310076702926931462272860910047023106022861026392,
            16719176823432989300578903549028783779765463801906387247035305507075676211556
        );                                      
        
        vk.IC[21] = Pairing.G1Point( 
            16765963561508928083005258925429112915307786864120360370448870749049851399356,
            11142182994724989221278568410054131029818990532846921101348049594385077882702
        );                                      
        
        vk.IC[22] = Pairing.G1Point( 
            20528013681950120718255589329439441608965001704393106097870670254520242283096,
            11506829297574750870643410841078464871886279253268196621652754418326950215747
        );                                      
        
        vk.IC[23] = Pairing.G1Point( 
            21214158734040028691407079019028740309878800147878075931145130466989009130066,
            18955167329309424338854122480544005006326106701638876188992889886964775932672
        );                                      
        
        vk.IC[24] = Pairing.G1Point( 
            5798187451282960106132784645974467929611403708453153634676463644189148988511,
            16503572123750698766690629320925103336684795725174297312311378360220638538687
        );                                      
        
        vk.IC[25] = Pairing.G1Point( 
            20436623013313038546915916462795070361332970699988397614850590386353510796499,
            8312462793250452951330184459543824279101013447115510006432212832738428265642
        );                                      
        
        vk.IC[26] = Pairing.G1Point( 
            6213028033553604615785306807258872146350683870364406847155622706998408695160,
            6018194579009025755980578169434705093935031867241547486681972460477275013123
        );                                      
        
        vk.IC[27] = Pairing.G1Point( 
            6589202694370114872414296227618319102533680024646128134879586769415743737414,
            7393518892924961936959878221192907668248213841403154644752993013086571214970
        );                                      
        
        vk.IC[28] = Pairing.G1Point( 
            3422749242329328720114589132624871830250434489822263386998326420961221212328,
            18305460456237736035106640026632439783172312975742700353447675958130368452645
        );                                      
        
        vk.IC[29] = Pairing.G1Point( 
            5873628395598172749726014814416176116795807173515947571468007024691324623880,
            17652906790864725092288499574064140785862631645874090989701367534963963182369
        );                                      
        
        vk.IC[30] = Pairing.G1Point( 
            8904297753483134934979254000424182401818267960366135564729073614342757617489,
            17892345665262115039420477845890764738760310747859843249481210723205929608098
        );                                      
        
        vk.IC[31] = Pairing.G1Point( 
            12292704431748686727801863244123292828722433500117820001583027403314104845950,
            17450999230091769570397983327817940808286908056198072538617714362657610269796
        );                                      
        
        vk.IC[32] = Pairing.G1Point( 
            871045947669591405606448700622655600459856231775474879828881748484155640957,
            18115862017168563881602708404403334381398429775797879551708703043148211358602
        );                                      
        
        vk.IC[33] = Pairing.G1Point( 
            19677193289352620738050260777754943252869876928760686198654085634098473500,
            12445378918995194916733206668749193307140112137252967876684883242032317089210
        );                                      
        
        vk.IC[34] = Pairing.G1Point( 
            15169196095324266205245818553866179520663921931332443126784637116660933541589,
            15177670355144914159014460496428951143430317903213510072861308785924046331420
        );                                      
        
        vk.IC[35] = Pairing.G1Point( 
            4836101394363135852732879517146097225087217247762124970017159673546861334371,
            16620475611367684788826247963494119923551263284822106742220349467511300572055
        );                                      
        
        vk.IC[36] = Pairing.G1Point( 
            10083815202004556860994574835611724159982754807401197111563499149620970780760,
            7069542855328723519786926743045669503778361661528810017918784452076762939093
        );                                      
        
        vk.IC[37] = Pairing.G1Point( 
            1535384298949984055834338783271679668591271573314310556349826139796284165316,
            4461830024703779505658148182745798110653535271530371972919026198212308859121
        );                                      
        
        vk.IC[38] = Pairing.G1Point( 
            19295489511658008214806944556644630453419022706536203254103034918710853891367,
            16068725134209294050542717340366493059043434489306962617543923443732302189460
        );                                      
        
        vk.IC[39] = Pairing.G1Point( 
            2191694346838689182728370016893001119882000734970270005644465237975290082993,
            6510814291626682908484379091567707723915626298054612680165627045760208561536
        );                                      
        
        vk.IC[40] = Pairing.G1Point( 
            21808095755608852683424888422106457607401109041060364352554748794682731063989,
            15800183417382902198008433809810241257413336560368610773979785930055579455392
        );                                      
        
        vk.IC[41] = Pairing.G1Point( 
            19172425811763117884248922984843611288527661863952239434989520870770711972603,
            20124917575579310967632236510227457790114541784354403331316083387753235022006
        );                                      
        
        vk.IC[42] = Pairing.G1Point( 
            7366559311908941289634528993762876360396697549154777523853779366644242802018,
            756687254744146768932520487604073662482946194253553852205611545328257732433
        );                                      
        
        vk.IC[43] = Pairing.G1Point( 
            7263594308568148899064406353462583840908138839393162954022664532391551502089,
            1303731698481866827602821572496859702892057191621320188193360544879861203255
        );                                      
        
        vk.IC[44] = Pairing.G1Point( 
            14309187095106047347092702346320406571461398688008742967244654615931150083150,
            11084632026926083267169006464611340277564957361113424301019843615627972442621
        );                                      
        
        vk.IC[45] = Pairing.G1Point( 
            3802150147759802811352205641804531495897724338181824288549337038373899057946,
            20019064423325891947331021898007606371951733670663302214393602379689149487767
        );                                      
        
        vk.IC[46] = Pairing.G1Point( 
            2961843894441744668242734166545187833695071555373354600531586870926912986307,
            17919729795444186674032267102172307062045480028321796409089655180476262981524
        );                                      
        
        vk.IC[47] = Pairing.G1Point( 
            17937208565613058244633121826610460576959787058535783760165767568545933446887,
            2745833330971196412833574736794317757574163887287195845800205908079526195877
        );                                      
        
        vk.IC[48] = Pairing.G1Point( 
            16636761545917245272879259270400121217955787381229862087887011735181101071090,
            18919707102248123999051817781597656038219510023872116489104757201730006529841
        );                                      
        
        vk.IC[49] = Pairing.G1Point( 
            16355481959425475981279347184867519914836970129003803044622659445498739741003,
            994061819280539331942432046074801385442659372152858480047390647965801498538
        );                                      
        
        vk.IC[50] = Pairing.G1Point( 
            4256774949460502672430960117598052253507678912537357265954071896440510751703,
            11373912307200359748579879838660601984995585173192491860392966717001564797605
        );                                      
        
        vk.IC[51] = Pairing.G1Point( 
            19758347456525358170904571795306577069553499959222711774711052470252416701108,
            15480606393703771107459222113973075009023855767869039820330733340160585865070
        );                                      
        
        vk.IC[52] = Pairing.G1Point( 
            7545960381660076082049249867358444111727538950504213492727111131877625010803,
            21722495713452026352634811805653270805697057719357545794437208627778477850471
        );                                      
        
        vk.IC[53] = Pairing.G1Point( 
            18637143549846112625510252710430045829323180500459065830467943601987786133029,
            3716384463916040691868986542703797551657676318328433260237724324735046058636
        );                                      
        
    }
    function verify(uint[] memory input, Proof memory proof) internal view returns (uint) {
        uint256 snark_scalar_field = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
        VerifyingKey memory vk = verifyingKey();
        require(input.length + 1 == vk.IC.length,"verifier-bad-input");
        // Compute the linear combination vk_x
        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);
        for (uint i = 0; i < input.length; i++) {
            require(input[i] < snark_scalar_field,"verifier-gte-snark-scalar-field");
            vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(vk.IC[i + 1], input[i]));
        }
        vk_x = Pairing.addition(vk_x, vk.IC[0]);
        if (!Pairing.pairingProd4(
            Pairing.negate(proof.A), proof.B,
            vk.alfa1, vk.beta2,
            vk_x, vk.gamma2,
            proof.C, vk.delta2
        )) return 1;
        return 0;
    }
    /// @return r  bool true if proof is valid
    function verifyProof(
            uint[2] calldata a,
            uint[2][2] calldata b,
            uint[2] calldata c,
            uint[53] calldata input
        ) public view returns (bool r) {
        Proof memory proof;
        proof.A = Pairing.G1Point(a[0], a[1]);
        proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);
        proof.C = Pairing.G1Point(c[0], c[1]);
        uint[] memory inputValues = new uint[](input.length);
        for(uint i = 0; i < input.length; i++){
            inputValues[i] = input[i];
        }
        if (verify(inputValues, proof) == 0) {
            return true;
        } else {
            return false;
        }
    }
}